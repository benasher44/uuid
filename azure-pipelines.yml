trigger:
  branches:
    include:
      - 'master'

pr:
  branches:
    include:
      - '*'

strategy:
  matrix:
    linux:
      imageName: 'ubuntu-18.04'
    mac:
      imageName: 'macos-10.14'
    windows:
      imageName: 'vs2017-win2016'

pool:
  vmImage: $(imageName)

steps:
  - bash: sudo apt install build-essential ruby
    condition: eq(variables['Agent.OS'], 'Linux')
    displayName: 'Install build dependencies'

  - script: choco install mingw
    condition: eq(variables['Agent.OS'], 'Windows_NT')
    displayName: 'Install build dependencies'

  - task: Bash@3
    inputs:
      targetType: inline
      script: 'sudo gem install bundler && bundle install --path=vendor/bundle && bundle exec danger --fail-on-errors=true'
      failOnStderr: true
    condition: eq(variables['Agent.OS'], 'Linux')
    displayName: 'Perform Danger Checks'
    env:
      DANGER_GITHUB_API_TOKEN: "$(DANGER_GITHUB_API_TOKEN)"

  - task: Gradle@2
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      tasks: 'build'
    displayName: 'Build'

  - task: DownloadSecureFile@1
    inputs:
      secureFile: sonatype_key.gpg
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

  - task: Gradle@2
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      tasks: 'publishMac'
    condition: and(eq(variables['Agent.OS'], 'Darwin'), succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    displayName: 'Publish Mac Artifacts'
    env:
      SONATYPE_USERNAME: "$(SONATYPE_USERNAME)"
      SONATYPE_PASSWORD: "$(SONATYPE_PASSWORD)"
      SIGNING_KEYID: "$(SIGNING_KEYID)"
      SIGNING_PASSWORD: "$(SIGNING_PASSWORD)"
      SIGNING_KEYRING: "$(DownloadSecureFile.secureFilePath)"

  - task: Gradle@2
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      tasks: 'publishLinux'
    condition: and(eq(variables['Agent.OS'], 'Linux'), succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    displayName: 'Publish Linux Artifacts'
    env:
      SONATYPE_USERNAME: "$(SONATYPE_USERNAME)"
      SONATYPE_PASSWORD: "$(SONATYPE_PASSWORD)"
      SIGNING_KEYID: "$(SIGNING_KEYID)"
      SIGNING_PASSWORD: "$(SIGNING_PASSWORD)"
      SIGNING_KEYRING: "$(DownloadSecureFile.secureFilePath)"

  - task: Gradle@2
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      tasks: 'publishWindows'
    condition: and(eq(variables['Agent.OS'], 'Windows_NT'), succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    displayName: 'Publish Windows Artifacts'
    env:
      SONATYPE_USERNAME: "$(SONATYPE_USERNAME)"
      SONATYPE_PASSWORD: "$(SONATYPE_PASSWORD)"
      SIGNING_KEYID: "$(SIGNING_KEYID)"
      SIGNING_PASSWORD: "$(SIGNING_PASSWORD)"
      SIGNING_KEYRING: "$(DownloadSecureFile.secureFilePath)"

variables:
  - group: 'Sonatype Credentials'
  - group: 'Danger Credentials'
