trigger:
  branches:
    include:
      - '*'

strategy:
  matrix:
    linux:
      imageName: 'ubuntu-16.04'
    mac:
      imageName: 'macos-10.14'
    windows:
      imageName: 'vs2017-win2016'

pool:
  vmImage: $(imageName)

steps:
  - bash: sudo apt install build-essential
    condition: eq(variables['Agent.OS'], 'Linux')
    displayName: 'Install build dependencies'

  - script: choco install mingw
    condition: eq(variables['Agent.OS'], 'Windows_NT')
    displayName: 'Install build dependencies'

  - task: Gradle@2
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      tasks: 'build'
    displayName: 'Build'

  - task: Gradle@2
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      tasks: 'publishMac'
    condition: and(eq(variables['Agent.OS'], 'Darwin'), succeeded(), eq(variables['Build.SourceBranch'], 'refs/pull/basher/publish'))
    displayName: 'Publish Mac Artifacts'
    env:
      SONATYPE_USERNAME: $(SONATYPE_USERNAME)
      SONATYPE_PASSWORD: $(SONATYPE_PASSWORD)

  - task: Gradle@2
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      tasks: 'publishLinux'
    condition: and(eq(variables['Agent.OS'], 'Linux'), succeeded(), eq(variables['Build.SourceBranch'], 'refs/pull/basher/publish'))
    displayName: 'Publish Linux Artifacts'
    env:
      SONATYPE_USERNAME: $(SONATYPE_USERNAME)
      SONATYPE_PASSWORD: $(SONATYPE_PASSWORD)

  - task: Gradle@2
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      tasks: 'publishWindows'
    condition: and(eq(variables['Agent.OS'], 'Windows_NT'), succeeded(), eq(variables['Build.SourceBranch'], 'refs/pull/basher/publish'))
    displayName: 'Publish Windows Artifacts'
    env:
      SONATYPE_USERNAME: $(SONATYPE_USERNAME)
      SONATYPE_PASSWORD: $(SONATYPE_PASSWORD)

variables:
  - group: 'Sonatype Credentials'
